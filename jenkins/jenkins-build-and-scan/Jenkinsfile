pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1 
kind: Pod 
metadata: 
    name: inline-scan-worker
spec: 
    containers: 
      - name: jnlp
      - name: maven
        image: maven:3.6-jdk-11
        command: ['cat']
        tty: true
      - name: builder
        image: gcr.io/kaniko-project/executor:debug
        command: ['cat']
        tty: true
      - name: inline-scan
        image: quay.io/sysdig/secure-inline-scan:2
        command: ['cat']
        tty: true
"""
       }
   }

    parameters { 
        string(name: 'IMAGE_NAME', defaultValue: 'docker.io/sysdiglabs/test-maven-app', description: 'Name of the image to be built andscanned (e.g.: myrepo/dummy-app)') 
    }
    
    environment {
        SECURE_API_KEY = credentials('sysdig-secure-api-credentials')
    }
    
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/openshift/test-maven-app'
            }
        }
        stage('Build app') {
            steps {
                container("maven") {
                    sh "mvn package"
                }
            }
        }
        stage('Build image - no push') {
            steps {
                container("builder") {
                    sh """cat > Dockerfile <<EOF
FROM gcr.io/distroless/java:11
COPY hello.jar /hello.jar
CMD /hello.jar
EOF
                    """
                    sh "/kaniko/executor --context \"${WORKSPACE}/target\" --destination ${IMAGE_NAME} --oci-layout-path \"${WORKSPACE}/oci\" --no-push"
                }
            }
        }
        stage('Scanning Image') {
            steps {
                container("inline-scan") {
                    sh "/sysdig-inline-scan.sh --sysdig-token ${SECURE_API_KEY_PSW} --storage-type oci-dir --storage-path \"${WORKSPACE}/oci\" ${IMAGE_NAME}"
                }
            }
        }
        stage('Push image') {
            steps {
                sh "echo Use skopeo or another tool to push to the registry - see https://github.com/sysdiglabs/tekton-inline-scanning/blob/master/beta/tekton-inline-scan-localbuild-beta.yaml"
                //sh "/bin/usr/skopeo copy \"oci:/${WORKSPACE}/oci/\" docker://${IMAGE_NAME}"
            }
        }
   }
}
